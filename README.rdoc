= CHEAPTOAD

* Web page upcoming

== DESCRIPTION:

CheapToad is a simple server plugin for the Hoptoad notifier.  Make your
app a Hoptoad server in just a couple of lines!

Hoptoad (hoptoadapp.com) is a commercial application and hosting
service, run by thoughtbot.  For larger or more important apps, you'll
want your error logging handled by a reliable, professional service,
such as thoughtbot and Hoptoad.  For small, simple and experimental
apps, why pay money?

With CheapToad and Heroku, you can get mostly-reliable remote error
logging for nothing.  When and if your app grows larger, you can change
two lines in config/initializers/hoptoad.rb and switch to Hoptoad.

By the way, I am in no way affiliated with thoughtbot.  This is all
reverse engineered from the Hoptoad notifier and somebody's RedMine
plugin for Hoptoad.  Thoughtbot is aware of CheapToad's existence, but
I'm not an employee or anything.

Also, if you like CheapToad for your experimental projects, consider
upgrading your more professional-looking projects to Hoptoad, or
getting your employer to do the same.  I don't get a cut or anything,
but if I/we are costing them money overall, they have less incentive
to keep giving us code to use.  If we act like the farm team for their
stuff and occasionally upgrade, they have more incentive to keep
writing things like the hoptoad_notifier for us to bend to our own
purposes.

== FEATURES:

* Very simple installation
* Very simple configuration
* Keeps your exceptions around to browse later
* 100% Free
* Maintains records of old errors forever
* RSS feed of errors for each project

== PROBLEMS:

* Very simple
* Not very configurable
* You have to run your own server, or use something like Heroku
* 100% Unsecured -- like Hoptoad, we rely on API key uniqueness for security.
  Unlike Hoptoad, we suggest using fairly guessable API keys.
* All of these problems can be summed up as "not industrial strength"

== SYNOPSIS:

Make a new Rails app, or choose an existing one.  In
config/environment.rb, add the line 'config.gem "cheaptoad"'.  You'll
also need to go into config/routes.rb and add the line "resources
:notices".  Now that app can receive Hoptoad errors!

In any and all apps that you want to send errors to your app, create a
file called config/initializers/hoptoad.rb, as you always would when
using Hoptoad.  Install the Hoptoad notifier also, of course.  The
config file will look a bit like this:

HoptoadNotifier.configure do |config|
  config.api_key = 'My Project Name'
  config.host = 'my-cheaptoad-catcher.heroku.com'
  config.port = 80  # or whatever port number

  # All standard Hoptoad filters are supported
  config.environment_filters << "MY_SECRET_KEY"

end

Note that the host and port are for the app that will *receive*
Hoptoad errors.  That's the app you added the 'config.gem "cheaptoad"'
to.

== REQUIREMENTS:

You'll need a Rails app, which will be your CheapToad server.  It can
do whatever else you like, but its notices controller will be used for
CheapToad stuff.

You will *not* need a Hoptoad API key.  That's kind of the point of this
project.  Instead of using a big hexadecimal string as your API key, I
recommend you use a simple string like "My Blog" or "Secret Project X".
That API key will be used by CheapToad as your project name.

== RESKINNING:

By default, CheapToad has a built-in set of HTML and RSS files to give
a very simple list of your errors.  If you'd rather use your own, it's
probably easiest to just build your own notices_controller.rb file and
appropriate view files to go with it.  You can look at the ones in the
CheapToad gem to do it -- they're very simple.  Then, add your own new
HTML, CSS and whatnot to pretty it up.

We're considering adding the ability to put in your own CSS file
without changing the HTML, just to make the output less stark.  If you
care about this feature and would use it, contact me and let me know!

== INSTALL:

sudo gem install cheaptoad

== LICENSE:

(The MIT License)

Copyright (c) 2009 Noah Gibbs

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.